import{_ as a,p as t,q as e,s as n,G as p,t as c,J as l,n as o}from"./framework-25b03c29.js";const i={},u=l(`<h3 id="基本选择器" tabindex="-1"><a class="header-anchor" href="#基本选择器" aria-hidden="true">#</a> 基本选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>标签选择器</td><td>通过标签名选择元素</td><td>div</td></tr><tr><td>类选择器</td><td>通过类名选择元素，一个类名可对应多个元素</td><td>.menu</td></tr><tr><td>id选择器</td><td>通过元素id属性选择元素，这个元素应该是唯一的</td><td>#footer</td></tr><tr><td>通配符选择器</td><td>选择页面中的所有元素，常用来清除内外边距</td><td>*</td></tr></tbody></table><h3 id="相邻选择器" tabindex="-1"><a class="header-anchor" href="#相邻选择器" aria-hidden="true">#</a> 相邻选择器</h3><p>选择所有指定元素的相邻后一个兄弟节点</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1 + p</span> <span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>h1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p0 被选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>good<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p1 被选中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="后代选择器" tabindex="-1"><a class="header-anchor" href="#后代选择器" aria-hidden="true">#</a> 后代选择器</h3><p>在所有后代节点中选</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ul li</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子选择器" tabindex="-1"><a class="header-anchor" href="#子选择器" aria-hidden="true">#</a> 子选择器</h3><p>与后代选择器不同的是，它只在亲儿子中选</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div &gt; a</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="并集选择器" tabindex="-1"><a class="header-anchor" href="#并集选择器" aria-hidden="true">#</a> 并集选择器</h3><p>也叫分组选择器，选择用<code>，</code>分隔的所有元素</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1,h2,h3</span> <span class="token punctuation">{</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="交集选择器" tabindex="-1"><a class="header-anchor" href="#交集选择器" aria-hidden="true">#</a> 交集选择器</h3><p>选择指定类名的指定元素</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p.center</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h3><p>根据元素的状态或所处 DOM 结构选择元素</p><ol><li>动态伪类选择器</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a:link</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>       <span class="token comment">/*链接一开始的样式*/</span>
<span class="token selector">a:visited</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment">/*链接访问后的样式*/</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token comment">/*光标经过链接的样式*/</span>
<span class="token selector">a:active</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     <span class="token comment">/*链接被按下时的样式*/</span>


<span class="token property">input</span><span class="token punctuation">:</span>focus     <span class="token comment">/*:focus 用于选择获取焦点的表单元素，一般针对表单元素而言*/</span>
<span class="token property">textarea</span><span class="token punctuation">:</span>focus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>结构伪类选择器（CSS3）</li></ol><table><thead><tr><th>选择符</th><th>含义</th></tr></thead><tbody><tr><td>E:first-child</td><td>第一个子元素 E</td></tr><tr><td>E:last-child</td><td>最后一个子元素 E</td></tr><tr><td>E:nth-child(n)</td><td>第n个子元素 E</td></tr><tr><td>E:first-of-type</td><td>指定元素 E 的第一个</td></tr><tr><td>E:last-of-type</td><td>指定元素 E 的最后一个</td></tr><tr><td>E:nth-of-type(n)</td><td>指定元素 E 的第 n 个</td></tr></tbody></table><blockquote><p><code>nth-child</code> 先找父亲的第n个孩子，再看是否为元素 E; <code>nth-of-type</code> 是直接找第 n 个 E，忽略其他非 E 的元素</p></blockquote><p>n可以是数字（从0开始）、关键字（even，odd）、公式等</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 啥都选不到,因为元素div的第二个孩子不是p元素*/</span>
<span class="token selector">div &gt; p:nth-child(2)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* 选到2号p标签 */</span>
<span class="token selector">div &gt; p:nth-of-type(2)</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>span<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="属性选择器-css3" tabindex="-1"><a class="header-anchor" href="#属性选择器-css3" aria-hidden="true">#</a> 属性选择器（CSS3）</h3><table><thead><tr><th>选择符</th><th>含义</th></tr></thead><tbody><tr><td>E[att]</td><td>选择具有 att 属性的 E 元素</td></tr><tr><td>E[att=&quot;val&quot;]</td><td>选择具有 att 属性且属性值等于 val 的 E 元素</td></tr><tr><td>E[att^=&quot;val&quot;]</td><td>选择具有 att 属性且属性值以 val 开头的 E 元素</td></tr><tr><td>E[att$=&quot;val&quot;]</td><td>选择具有 att 属性且属性值以 val 结尾的 E 元素</td></tr><tr><td>E[att*=&quot;val&quot;]</td><td>选择具有 att 属性且属性值含有 val 的 E 元素</td></tr></tbody></table><h3 id="伪元素选择器-css3" tabindex="-1"><a class="header-anchor" href="#伪元素选择器-css3" aria-hidden="true">#</a> 伪元素选择器(CSS3)</h3><p>伪元素选择器利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构</p><table><thead><tr><th>选择器</th><th>含义</th></tr></thead><tbody><tr><td>::before</td><td>在元素内部前面插入内容</td></tr><tr><td>::after</td><td>在元素内部后面插入内容</td></tr></tbody></table><blockquote><ul><li>伪元素必须有 content 属性,哪怕为&quot;&quot;</li><li>before 和 after 创建了一个行内元素，在 DOM 树中无法找到，故为伪元素</li></ul></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 伪元素字体图标 */</span>
<span class="token selector">p::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;\\e91e&#39;</span><span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 伪元素清除浮动 */</span>
<span class="token comment">/* 1、额外标签法（隔墙法） */</span>
<span class="token comment">/* 在浮动元素后面添加一个块级标签（如div），并设置 clear: both */</span>
&lt;div style=<span class="token string">&quot;clear:both&quot;</span> &gt;&lt;/div&gt;

<span class="token comment">/* 2、父级元素添加overflow，将其属性值设置为 hidden、 auto 或 scroll */</span>

<span class="token comment">/* 3、父级添加after伪元素 */</span>
<span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> 必须要有content属性
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> 块级元素
  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 不要看见该元素
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span> 核心代码清除浮动
  <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> 不要看见该元素
<span class="token punctuation">}</span>
<span class="token selector">.clearfix</span> <span class="token punctuation">{</span> <span class="token comment">/* IE6、 7 专有 */</span>
  *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">4、父级元素添加双伪元素
.clearfix:before,.clearfix:after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token selector">clearfix:after</span> <span class="token punctuation">{</span>
  <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
<span class="token selector">clearfix</span> <span class="token punctuation">{</span>
  *<span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css选择器案例" tabindex="-1"><a class="header-anchor" href="#css选择器案例" aria-hidden="true">#</a> CSS选择器案例</h3><hr><p>ref：</p>`,39),d={href:"https://brucecai55520.gitee.io/bruceblog/notes/h5c3/css.html",target:"_blank",rel:"noopener noreferrer"};function r(k,v){const s=o("ExternalLinkIcon");return t(),e("div",null,[u,n("ul",null,[n("li",null,[n("a",d,[p("CSS基础"),c(s)])])])])}const b=a(i,[["render",r],["__file","CSS选择器.html.vue"]]);export{b as default};
